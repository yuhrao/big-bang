# Simple workflow for deploying static content to GitHub Pages
name: Deploy Docs

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v4

      - uses: actions/checkout@v4

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '20'

      - name: Setup Clojure
        uses: DeLaGuardo/setup-clojure@12.1
        with:
          cli: '1.11.1.1413'
          bb: '1.3.181'

      - name: Cache clojure dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.deps.clj
          # List all files containing dependencies:
          key: cljdeps-${{ hashFiles('deps.edn', 'bb.edn') }}
          restore-keys: cljdeps-
      - name: Fix broken images
        run: sed -i 's/\/docs\/static\/img\/big-bang-banner.png/\/static\/img\/big-bang-banner.png/g' README.md && cp README.md ./docs/README.md

      - name: Generate from cljdocs
        run: clojure -M:doc

      - name: Configure Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: "docs/node_modules"
          # List all files containing dependencies:
          key: bun-${{ hashFiles('docs/bun.lockdb') }}
          restore-keys: bun-

      - name: Install dependencies
        working-directory: ./docs
        run: bun install

      - name: Build Docs
        working-directory: ./docs
        run: bun run build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: './docs/build'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
