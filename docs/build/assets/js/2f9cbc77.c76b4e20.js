"use strict";(self.webpackChunkbig_bang=self.webpackChunkbig_bang||[]).push([[380],{4364:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>c});var n=s(7624),l=s(2172);const i={sidebar_position:0,custom_edit_url:"https://github.com/yuhrao/big-bang/tree/main/README.md"},o="Logger",t={id:"Components/logger/index",title:"Logger",description:"Standardized logs with various targets (Publishers)",source:"@site/docs/Components/logger/index.md",sourceDirName:"Components/logger",slug:"/Components/logger/",permalink:"/big-bang/Components/logger/",draft:!1,unlisted:!1,editUrl:"https://github.com/yuhrao/big-bang/tree/main/README.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0,custom_edit_url:"https://github.com/yuhrao/big-bang/tree/main/README.md"},sidebar:"tutorialSidebar",previous:{title:"sql-execution",permalink:"/big-bang/Components/database/api/yuhrao/database/sql-execution/"},next:{title:"core",permalink:"/big-bang/Components/logger/api/yuhrao/logger/core/"}},a={},c=[{value:"Libs",id:"libs",level:2},{value:"Usage",id:"usage",level:2},{value:"Setup your logger",id:"setup-your-logger",level:3},{value:"Publishers",id:"publishers",level:3},{value:"Console Publisher",id:"console-publisher",level:3},{value:"File Publisher",id:"file-publisher",level:3},{value:"Obscurer",id:"obscurer",level:3}];function d(e){const r={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.M)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.h1,{id:"logger",children:"Logger"}),"\n",(0,n.jsx)(r.p,{children:"Standardized logs with various targets (Publishers)"}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.strong,{children:"Table of Contents"})}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.a,{href:"#logger",children:"Logger"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"#libs",children:"Libs"})}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.a,{href:"#usage",children:"Usage"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"#setup-your-logger",children:"Setup your logger"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"#publishers",children:"Publishers"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"#console-publisher",children:"Console Publisher"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"#file-publisher",children:"File Publisher"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"#obscurer",children:"Obscurer"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(r.h2,{id:"libs",children:"Libs"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Lib"}),(0,n.jsx)(r.th,{children:"Description"}),(0,n.jsx)(r.th,{style:{textAlign:"left"},children:"Docs"})]})}),(0,n.jsx)(r.tbody,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"uLog"}),(0,n.jsx)(r.td,{children:"Async log streaming to various targets"}),(0,n.jsxs)(r.td,{style:{textAlign:"left"},children:[(0,n.jsx)(r.a,{href:"https://cljdoc.org/d/com.brunobonacci/mulog/0.9.0/doc/readme",children:"cljdoc"}),(0,n.jsx)("br",{})," ",(0,n.jsx)(r.a,{href:"https://github.com/BrunoBonacci/mulog",children:"github"})]})]})})]}),"\n",(0,n.jsx)(r.h2,{id:"usage",children:"Usage"}),"\n",(0,n.jsx)(r.h3,{id:"setup-your-logger",children:"Setup your logger"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-clojure",children:"(require '[yuhrao.logger.core :as logger])\n\n(logger/setup! {:publishers {:console {}}\n                :min-level  :debug})\n"})}),"\n",(0,n.jsx)(r.h3,{id:"publishers",children:"Publishers"}),"\n",(0,n.jsx)(r.p,{children:"All built-in publishers are based on \xb5Log default publishers.\nBecause of that, their configuration is slightly different."}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["Instead of a ",(0,n.jsx)(r.code,{children:":transform"})," option that receives a function to handle logs, we have a ",(0,n.jsx)(r.code,{children:":xfn"}),"\noption that receives a transducer to manipulate logs."]}),"\n"]}),"\n",(0,n.jsx)(r.h3,{id:"console-publisher",children:"Console Publisher"}),"\n",(0,n.jsxs)(r.p,{children:["Config: same parameters as\n\xb5Log's ",(0,n.jsx)(r.a,{href:"https://cljdoc.org/d/com.brunobonacci/mulog/0.9.0/doc/publishers/simple-console-publisher",children:"Simple Console Publisher"})]}),"\n",(0,n.jsxs)(r.blockquote,{children:["\n",(0,n.jsxs)(r.p,{children:["Logger already includes ",(0,n.jsx)(r.code,{children:":type :console"})," parameter"]}),"\n"]}),"\n",(0,n.jsxs)(r.blockquote,{children:["\n",(0,n.jsx)(r.p,{children:"You can pass an empty map as config to start a standard console publisher"}),"\n"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-clojure",children:"(require '[yuhrao.logger.core :as logger])\n\n(logger/setup! {:publishers {:console {:pretty? false\n                                       :xfn     (map identity)}}})\n"})}),"\n",(0,n.jsx)(r.h3,{id:"file-publisher",children:"File Publisher"}),"\n",(0,n.jsxs)(r.p,{children:["Config: same parameters as\n\xb5Log's ",(0,n.jsx)(r.a,{href:"https://cljdoc.org/d/com.brunobonacci/mulog/0.9.0/doc/publishers/simple-file-publisher",children:"Simple File Publisher"})]}),"\n",(0,n.jsxs)(r.blockquote,{children:["\n",(0,n.jsxs)(r.p,{children:["Logger already includes ",(0,n.jsx)(r.code,{children:":type :simple-file"})," parameter"]}),"\n"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-clojure",children:'(require \'[yuhrao.logger.core :as logger])\n\n(logger/setup! {:publishers {:file {:filename "/tmp/app/server.log"\n                                    :xfn      (map identity)}}})\n'})}),"\n",(0,n.jsx)(r.h3,{id:"obscurer",children:"Obscurer"}),"\n",(0,n.jsxs)(r.p,{children:["Obscure sensitive data. Pass a function that receives a map (that's the log's data) and return a map with data obscured.\nIt's recommended to use ",(0,n.jsx)(r.code,{children:"yuhrao.data-cloak.core.map/obscurer"})]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-clojure",children:'(require \'[yuhrao.logger.core :as logger]\n         \'[yuhrao.data-cloak.core.map :as dc.map]\n         \'[yuhrao.data-cloak.core.string :as dc.string])\n\n\n(logger/setup! {:publishers {:file {:filename "/tmp/app/server.log"}}\n                :obscurer (dc.map/obscurer {:email dc.string/email})})\n\n(logger/info ::my-log "something to be logged"\n             {:email "some-mail@gmail.com"\n              :random "value"})\n;; =>> {...logfields :data {:email "so*****il@gmail.com" :random "value"}}\n'})})]})}function h(e={}){const{wrapper:r}={...(0,l.M)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},2172:(e,r,s)=>{s.d(r,{I:()=>t,M:()=>o});var n=s(1504);const l={},i=n.createContext(l);function o(e){const r=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function t(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),n.createElement(i.Provider,{value:r},e.children)}}}]);