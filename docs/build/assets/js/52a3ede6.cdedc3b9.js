"use strict";(self.webpackChunkbig_bang=self.webpackChunkbig_bang||[]).push([[9344],{236:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>a});var s=n(7624),i=n(2172);const o={sidebar_label:"core",title:"yuhrao.webserver.core",toc_min_heading_level:2,toc_max_heading_level:4,custom_edit_url:null},t=void 0,l={id:"Components/webserver/api/yuhrao/webserver/core/index",title:"yuhrao.webserver.core",description:"app",source:"@site/docs/Components/webserver/api/yuhrao/webserver/core/index.md",sourceDirName:"Components/webserver/api/yuhrao/webserver/core",slug:"/Components/webserver/api/yuhrao/webserver/core/",permalink:"/big-bang/Components/webserver/api/yuhrao/webserver/core/",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{sidebar_label:"core",title:"yuhrao.webserver.core",toc_min_heading_level:2,toc_max_heading_level:4,custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"Webserver",permalink:"/big-bang/Components/webserver/"},next:{title:"middlewares",permalink:"/big-bang/Components/webserver/api/yuhrao/webserver/middlewares/"}},c={},a=[{value:"app",id:"app",level:3},{value:"servers",id:"servers",level:3},{value:"start!",id:"start-BANG-",level:3},{value:"stop!",id:"stop-BANG-",level:3}];function d(e){const r={a:"a",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.M)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h3,{id:"app",children:"app"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-clojure",children:"(app config)\n"})}),"\n",(0,s.jsx)(r.p,{children:"Create a ring handler from a config map.\nConfig map:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:":router"})," - A reitit router. ",(0,s.jsx)(r.a,{href:"https://cljdoc.org/d/metosin/reitit/0.6.0/doc/basics/router",children:"Reitit Docs"})]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:":disable-logs?"})," - A boolean to disable logs. Default is ",(0,s.jsx)(r.code,{children:"false"})]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:":openapi"})," - A map with openapi options. ",(0,s.jsx)(r.a,{href:"https://cljdoc.org/d/metosin/reitit/0.7.0-alpha7/doc/ring/openapi-support?q=openapi#openapi-support",children:"Reitit OpenAPI Docs"})]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:":swagger"})," - A map with swagger options. ",(0,s.jsx)(r.a,{href:"https://cljdoc.org/d/metosin/reitit/0.7.0-alpha7/doc/ring/swagger-support",children:"Reitit Swagger Docs"})]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:":middlewares"})," - A vector of middlewares."]}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"Observations:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["When neither ",(0,s.jsx)(r.code,{children:":openapi"})," nor ",(0,s.jsx)(r.code,{children:":swagger"})," are provided, the server will not serve any openapi or swagger documentation."]}),"\n",(0,s.jsx)(r.li,{children:"Middlewares are applied using sieppari."}),"\n"]}),"\n",(0,s.jsx)("p",{children:(0,s.jsx)("sub",{children:(0,s.jsx)("a",{href:"https://github.com/yuhrao/big-bang/blob/main//src/yuhrao/webserver/core.clj#L6-L21",children:"Source"})})}),"\n",(0,s.jsx)(r.h3,{id:"servers",children:"servers"}),"\n",(0,s.jsx)("p",{children:(0,s.jsx)("sub",{children:(0,s.jsx)("a",{href:"https://github.com/yuhrao/big-bang/blob/main//src/yuhrao/webserver/core.clj#L4-L4",children:"Source"})})}),"\n",(0,s.jsx)(r.h3,{id:"start-BANG-",children:"start!"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-clojure",children:"(start! {:keys [server-id], :as config})\n"})}),"\n",(0,s.jsx)(r.p,{children:"Start a server from a config map.\nConfig map:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:":server-id"})," - A unique identifier for the server. Used to stop the server."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:":join?"})," - A boolean to join the server thread. Default is ",(0,s.jsx)(r.code,{children:"false"})]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:":port"})," - A port number. No default is provided"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:":host"})," - A host name. Defaults to ",(0,s.jsx)(r.code,{children:"0.0.0.0"})]}),"\n",(0,s.jsxs)(r.li,{children:["Accpts any parameter that [",(0,s.jsx)(r.a,{href:"#app",children:(0,s.jsx)(r.code,{children:"app"})}),"](#app) function accepts."]}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"Notes:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["Ring handler is created internally using [",(0,s.jsx)(r.a,{href:"#app",children:(0,s.jsx)(r.code,{children:"app"})}),"](#app) function."]}),"\n",(0,s.jsxs)(r.li,{children:["Shutdown hook is automatically added to stop the server when the JVM is stopped.\n",(0,s.jsx)("p",{children:(0,s.jsx)("sub",{children:(0,s.jsx)("a",{href:"https://github.com/yuhrao/big-bang/blob/main//src/yuhrao/webserver/core.clj#L23-L39",children:"Source"})})})]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"stop-BANG-",children:"stop!"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-clojure",children:"(stop! server-id)\n"})}),"\n",(0,s.jsxs)(r.p,{children:["Stop a server by its id.\n",(0,s.jsx)("p",{children:(0,s.jsx)("sub",{children:(0,s.jsx)("a",{href:"https://github.com/yuhrao/big-bang/blob/main//src/yuhrao/webserver/core.clj#L41-L49",children:"Source"})})})]})]})}function h(e={}){const{wrapper:r}={...(0,i.M)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},2172:(e,r,n)=>{n.d(r,{I:()=>l,M:()=>t});var s=n(1504);const i={},o=s.createContext(i);function t(e){const r=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),s.createElement(o.Provider,{value:r},e.children)}}}]);