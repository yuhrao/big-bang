"use strict";(self.webpackChunkbig_bang=self.webpackChunkbig_bang||[]).push([[6500],{8244:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>c,toc:()=>i});var o=r(7624),t=r(2172);const a={sidebar_label:"core",title:"yuhrao.logger.core",toc_min_heading_level:2,toc_max_heading_level:4,custom_edit_url:null},l=void 0,c={id:"Components/logger/api/yuhrao/logger/core/index",title:"yuhrao.logger.core",description:"debug",source:"@site/docs/Components/logger/api/yuhrao/logger/core/index.md",sourceDirName:"Components/logger/api/yuhrao/logger/core",slug:"/Components/logger/api/yuhrao/logger/core/",permalink:"/big-bang/Components/logger/api/yuhrao/logger/core/",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{sidebar_label:"core",title:"yuhrao.logger.core",toc_min_heading_level:2,toc_max_heading_level:4,custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"Logger",permalink:"/big-bang/Components/logger/"},next:{title:"log",permalink:"/big-bang/Components/logger/api/yuhrao/logger/log/"}},s={},i=[{value:"debug",id:"debug",level:3},{value:"error",id:"error",level:3},{value:"info",id:"info",level:3},{value:"log",id:"log",level:3},{value:"restart!",id:"restart-BANG-",level:3},{value:"set-global-context",id:"set-global-context",level:3},{value:"setup!",id:"setup-BANG-",level:3},{value:"stop!",id:"stop-BANG-",level:3},{value:"trace",id:"trace",level:3},{value:"Track duration and outcome (errors)",id:"track-duration-and-outcome-errors",level:3},{value:"Capture evaluation result",id:"capture-evaluation-result",level:3},{value:"warn",id:"warn",level:3},{value:"with-context",id:"with-context",level:3}];function d(e){const n={a:"a",code:"code",em:"em",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.M)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h3,{id:"debug",children:"debug"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-clojure",children:"(debug event-name message)\n(debug event-name message data)\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Log at debug level\n",(0,o.jsx)("p",{children:(0,o.jsx)("sub",{children:(0,o.jsx)("a",{href:"https://github.com/yuhrao/big-bang/blob/main//src/yuhrao/logger/core.clj#L32-L37",children:"Source"})})})]}),"\n",(0,o.jsx)(n.h3,{id:"error",children:"error"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-clojure",children:"(error event-name message)\n(error event-name message data)\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Log at error level\n",(0,o.jsx)("p",{children:(0,o.jsx)("sub",{children:(0,o.jsx)("a",{href:"https://github.com/yuhrao/big-bang/blob/main//src/yuhrao/logger/core.clj#L53-L58",children:"Source"})})})]}),"\n",(0,o.jsx)(n.h3,{id:"info",children:"info"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-clojure",children:"(info event-name message)\n(info event-name message data)\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Log at info level\n",(0,o.jsx)("p",{children:(0,o.jsx)("sub",{children:(0,o.jsx)("a",{href:"https://github.com/yuhrao/big-bang/blob/main//src/yuhrao/logger/core.clj#L39-L44",children:"Source"})})})]}),"\n",(0,o.jsx)(n.h3,{id:"log",children:"log"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-clojure",children:"(log level event-name message)\n(log level event-name message data)\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Log at error level\n",(0,o.jsx)("p",{children:(0,o.jsx)("sub",{children:(0,o.jsx)("a",{href:"https://github.com/yuhrao/big-bang/blob/main//src/yuhrao/logger/core.clj#L25-L30",children:"Source"})})})]}),"\n",(0,o.jsx)(n.h3,{id:"restart-BANG-",children:"restart!"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-clojure",children:"(restart!)\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Restart the logger. It will start again with the same configuration.\n",(0,o.jsx)("p",{children:(0,o.jsx)("sub",{children:(0,o.jsx)("a",{href:"https://github.com/yuhrao/big-bang/blob/main//src/yuhrao/logger/core.clj#L20-L23",children:"Source"})})})]}),"\n",(0,o.jsx)(n.h3,{id:"set-global-context",children:"set-global-context"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-clojure",children:"(set-global-context context-map)\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Set context for all logs\n",(0,o.jsx)("p",{children:(0,o.jsx)("sub",{children:(0,o.jsx)("a",{href:"https://github.com/yuhrao/big-bang/blob/main//src/yuhrao/logger/core.clj#L183-L186",children:"Source"})})})]}),"\n",(0,o.jsx)(n.h3,{id:"setup-BANG-",children:"setup!"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-clojure",children:"(setup! opts)\n"})}),"\n",(0,o.jsx)(n.p,{children:"Start and configure the logger\nopts:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:":min-level"}),": minimum level to be logged"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:":publishers"}),": a map with publishers to put logs into. See ",(0,o.jsx)(n.code,{children:"publishers"})," section in README"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:":obscurer"}),": an obscurer function. Check out ",(0,o.jsx)(n.code,{children:"yuhrao.data-cloak.core.map"})," namespace. ",(0,o.jsx)(n.strong,{children:"It obscures ONLY FIELDS IN LOG'S DATA"}),"\n",(0,o.jsx)("p",{children:(0,o.jsx)("sub",{children:(0,o.jsx)("a",{href:"https://github.com/yuhrao/big-bang/blob/main//src/yuhrao/logger/core.clj#L6-L13",children:"Source"})})})]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"stop-BANG-",children:"stop!"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-clojure",children:"(stop!)\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Stop the logger. No more logs will be published.\n",(0,o.jsx)("p",{children:(0,o.jsx)("sub",{children:(0,o.jsx)("a",{href:"https://github.com/yuhrao/big-bang/blob/main//src/yuhrao/logger/core.clj#L15-L18",children:"Source"})})})]}),"\n",(0,o.jsx)(n.h3,{id:"trace",children:"trace"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-clojure",children:"(trace event-name trace-opts & body)\n"})}),"\n",(0,o.jsx)(n.p,{children:"Traces the execution of an operation with the outcome and the time\ntaken in nanoseconds."}),"\n",(0,o.jsx)(n.h3,{id:"track-duration-and-outcome-errors",children:"Track duration and outcome (errors)"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.em,{children:(0,o.jsx)(n.strong,{children:"\u03bc/trace"})})," will generate a trace object which can be understood by\ndistributed tracing systems."]}),"\n",(0,o.jsx)(n.p,{children:"It computes the duration in nanoseconds of the current trace/span\nand it links via the context to the parent trace and root traces."}),"\n",(0,o.jsxs)(n.p,{children:["It tracks the ",(0,o.jsx)(n.code,{children:":outcome"})," of the evaluation of the ",(0,o.jsx)(n.code,{children:"body"}),".  If the\nevaluation it throws an exception ",(0,o.jsx)(n.code,{children:":outcome"})," will be ",(0,o.jsx)(n.code,{children:":error"}),"\notherwise it will be ",(0,o.jsx)(n.code,{children:":ok"})]}),"\n",(0,o.jsx)(n.p,{children:"The trace information will be tracked across function calls as long as\nthe execution is in the same thread. If the execution spans more threads\nor more processes the context must be passed forward."}),"\n",(0,o.jsx)(n.p,{children:"Example of usage:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-Clojure",children:"(u/trace ::availability\n  [:product-id product-id, :order order-id, :user user-id]\n  (product-availability product-id))\n"})}),"\n",(0,o.jsx)(n.p,{children:"Will produce an event as follow:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-Clojure",children:'{:mulog/trace-id #mulog/flake "4VIKxhMPB2eS0uc1EV9M9a5G7MYn3TMs",\n :mulog/event-name :your-ns/availability,\n :mulog/timestamp 1586804894278,\n :mulog/duration 253303600,\n :mulog/namespace "your-ns",\n :mulog/outcome :ok,\n :mulog/root-trace #mulog/flake "4VILF82cx_mFKlbKN-PUTezsRdsn8XOY",\n :mulog/parent-trace #mulog/flake "4VILL47ifjeHTaaG3kAWtZoELvk9AGY9",\n :order "34896-34556",\n :product-id "2345-23-545",\n :user "709-6567567"}\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Note the ",(0,o.jsx)(n.code,{children:":mulog/duration"})," and ",(0,o.jsx)(n.code,{children:":mulog/outcome"})," reporting\nrespectively the duration of the execution of ",(0,o.jsx)(n.code,{children:"product-availablity"}),"\nin ",(0,o.jsx)(n.strong,{children:"nanoseconds"})," as well as the outcome (",(0,o.jsx)(n.code,{children:":ok"})," or ",(0,o.jsx)(n.code,{children:":error"}),"). If an\nexception is raised within the body an additional field is added\n",(0,o.jsx)(n.code,{children:":exception"})," with the exception raised."]}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:":pairs"})," present in the vector are added in the event, but they\nare not propagated to nested traces, use ",(0,o.jsx)(n.a,{href:"#with-context",children:(0,o.jsx)(n.code,{children:"with-context"})})," for that."]}),"\n",(0,o.jsxs)(n.p,{children:["Finally, ",(0,o.jsx)(n.code,{children:":mulog/trace-id"}),", ",(0,o.jsx)(n.code,{children:":mulog/parent-trace"})," and\n",(0,o.jsx)(n.code,{children:":mulog/root-trace"})," identify respectively this trace, the outer\ntrace wrapping this trace if present otherwise ",(0,o.jsx)(n.code,{children:"nil"})," and the\n",(0,o.jsx)(n.code,{children:":mulog/root-trace"})," is the outer-most trace with not parents.  Keep\nin mind that ",(0,o.jsx)(n.em,{children:"parent-trace"})," and ",(0,o.jsx)(n.em,{children:"root-trace"})," might come from another\nsystem and they are propagated by the context."]}),"\n",(0,o.jsx)(n.h3,{id:"capture-evaluation-result",children:"Capture evaluation result"}),"\n",(0,o.jsxs)(n.p,{children:["Sometimes it is useful to add to the trace pairs which come from the\nresult of the body's evaluation. For example to capture the http\nresponse status or other valuable metrics from the response.\n",(0,o.jsx)(n.em,{children:(0,o.jsx)(n.strong,{children:"\u03bc/trace"})})," offers the possibility to pass a function to capture\nsuch info from the evaluation result.\nTo achieve this, instead of passing a simple vector of pairs\nyou need to provide a map which contains a ",(0,o.jsx)(n.code,{children:":capture"})," function\nin addition to the ",(0,o.jsx)(n.code,{children:":pairs"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"capture"})," function is a function which takes one argument,\n",(0,o.jsx)(n.em,{children:"the result"})," of the evaluation and returns a map of key-value pairs\nwhich need to be added to the trace. The ",(0,o.jsx)(n.code,{children:"capture"})," function will only\nrun when the ",(0,o.jsx)(n.code,{children:":mulog/outcome :ok"})]}),"\n",(0,o.jsx)(n.p,{children:"Example of usage:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-Clojure",children:'(u/trace ::availability\n  {:pairs [:product-id product-id, :order order-id, :user user-id]\n   :capture (fn [r] {:http-status (:status r)\n                     :etag (get-in r [:headers "etag"])})\n  (product-availability product-id))\n'})}),"\n",(0,o.jsx)(n.p,{children:"Will produce an event as follow:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-Clojure",children:'{:mulog/trace-id #mulog/flake "4VIKxhMPB2eS0uc1EV9M9a5G7MYn3TMs",\n :mulog/event-name :your-ns/availability,\n :mulog/timestamp 1586804894278,\n :mulog/duration 253303600,\n :mulog/namespace "your-ns",\n :mulog/outcome :ok,\n :mulog/root-trace #mulog/flake "4VILF82cx_mFKlbKN-PUTezsRdsn8XOY",\n :mulog/parent-trace #mulog/flake "4VILL47ifjeHTaaG3kAWtZoELvk9AGY9",\n :order "34896-34556",\n :product-id "2345-23-545",\n :user "709-6567567",\n :http-status 200,\n :etag "1dfb-2686-4cba2686fb8b1"}\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Note that in addition to the pairs like in the previous example\nthis one contains ",(0,o.jsx)(n.code,{children:":http-status"})," and ",(0,o.jsx)(n.code,{children:":etag"})," which where extracted\nfrom the http response of ",(0,o.jsx)(n.code,{children:"product-availability"})," evaluation."]}),"\n",(0,o.jsxs)(n.p,{children:["Should the execution of the ",(0,o.jsx)(n.code,{children:"capture"})," function fail for any reason\nthe pair will be added to this trace with ",(0,o.jsx)(n.code,{children:":mulog/capture :error"}),"\nto signal the execution error."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"macro"})}),"\n",(0,o.jsx)("p",{children:(0,o.jsx)("sub",{children:(0,o.jsx)("a",{href:"https://github.com/yuhrao/big-bang/blob/main//src/yuhrao/logger/core.clj#L66-L181",children:"Source"})})}),"\n",(0,o.jsx)(n.h3,{id:"warn",children:"warn"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-clojure",children:"(warn event-name message)\n(warn event-name message data)\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Log at warn level\n",(0,o.jsx)("p",{children:(0,o.jsx)("sub",{children:(0,o.jsx)("a",{href:"https://github.com/yuhrao/big-bang/blob/main//src/yuhrao/logger/core.clj#L46-L51",children:"Source"})})})]}),"\n",(0,o.jsx)(n.h3,{id:"with-context",children:"with-context"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-clojure",children:"(with-context context-map & body)\n"})}),"\n",(0,o.jsx)(n.p,{children:"Add local context to logs"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"macro"})}),"\n",(0,o.jsx)("p",{children:(0,o.jsx)("sub",{children:(0,o.jsx)("a",{href:"https://github.com/yuhrao/big-bang/blob/main//src/yuhrao/logger/core.clj#L60-L64",children:"Source"})})})]})}function h(e={}){const{wrapper:n}={...(0,t.M)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},2172:(e,n,r)=>{r.d(n,{I:()=>c,M:()=>l});var o=r(1504);const t={},a=o.createContext(t);function l(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);